import React, { useState, useEffect, useRef } from 'react'
import ShowTable from './ShowTable'

const getLocalItems = () => {
    let list = localStorage.getItem("lstorage");

    if (list) {
        return JSON.parse(localStorage.getItem("lstorage"));
    }
    else {
        return [];
    }
};
const getimage = () => {
    let img = localStorage.getItem("Mylstorage");
    if (img) {
        return JSON.parse(localStorage.getItem("Mylstorage"))
    }
    else {
        return [];
    }
}


function Form() {
    const [inputValue, setInputValue] = useState({ id: "", firstName: "", lastName: "", email: "" });
    const [addContact, setAddContact] = useState(getLocalItems());
    const [baseImage, setBaseImage] = useState(getimage());
    const [toggle, setToggle] = useState(true);


    const inputRef = useRef(null);

    useEffect(() => {
        inputValue.id = new Date().getTime().toString();
    }, [inputValue])

    function handleChange(event) {
        const { name, value } = event.target;
        setInputValue((prevState) => ({ ...prevState, [name]: value }));
    }

    const converHandler = async (e) => {
        const file = e.target.files[0];
        const base64 = await convertBase64(file);
        // console.log(base64)
        setBaseImage((oldImage) => ([...oldImage, base64]));
    }

    const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
            const fileReader = new FileReader();
            fileReader.readAsDataURL(file)

            fileReader.onload = () => {
                resolve(fileReader.result);
            }

            fileReader.onerror = (error) => {
                reject(error);
            }
        })
    }



    function handleSubmit(event) {
        event.preventDefault();
        if (inputValue.firstName.length === 0 || inputValue.lastName.length === 0 || inputValue.email.length === 0) {
            alert("enter filup data")
        }
        else if (inputValue.firstName.length && inputValue.lastName.length && inputValue.email.length) {
            setAddContact((prevContact) => [...prevContact, inputValue]);
        }
        else {

            setBaseImage((olderImage) => [...olderImage, baseImage]);
        }
        setInputValue({ id: "", firstName: "", lastName: "", email: "" })
    }

    useEffect(() => {
        localStorage.setItem("lstorage", JSON.stringify(addContact));
    }, [addContact]);

    useEffect(() => {
        localStorage.setItem("Mylstorage", JSON.stringify(baseImage));
    }, [baseImage]);


    const EditItem = (index) => {
        if (toggle) {
            let myData = addContact.find((element) => {
                return element.id === index;
            })
            setInputValue(myData);
            setToggle(false)
        }

        else if (!toggle) {

            setAddContact(addContact.map(value => {
                if (value.id === index) {
                    return { ...value, firstName: inputValue.firstName, lastName: inputValue.lastName, email: inputValue.email };
                }
                return value;
            }),
            )
            setInputValue({ id: "", firstName: "", lastName: "", email: "" })
            setToggle(true);
        }
    }

    return (
        <div className=' mt-3 container'>
            <form className='bg-secondary p-3'>
                {/* <div className="mb-3">
                        <label htmlFor="text" className="form-label">Student Id:</label>
                        <input type="text" className="form-control" id="text" onChange={handleChange} placeholder="Studnt Id" name="id" autoComplete='off' value={inputValue.id} />
                    </div> */}
                <div className="mb-3">
                    <label htmlFor="text" className="form-label">First Name:</label>
                    <input type="text" className="form-control" id="text" onChange={handleChange} placeholder="Enter Student First Name" name="firstName" autoComplete='off' value={inputValue.firstName} />
                </div>
                <div className="mb-3">
                    <label htmlFor="pwd" className="form-label">Last Name:</label>
                    <input type="text" className="form-control" id="text" onChange={handleChange} placeholder="Enter Student Last Name" name="lastName" autoComplete='off' value={inputValue.lastName} />
                </div>
                <div className="form-group">
                    <label htmlFor="exampleInputEmail1">Email address:</label>
                    <input type="email" className="form-control" id="exampleInputEmail1" onChange={handleChange} aria-describedby="emailHelp" name='email' autoComplete='off' placeholder="Enter Student Email" value={inputValue.email} />
                </div>
                <div className="mb-3">
                    <label htmlFor="formFileMultiple" className="form-label">Select Id Card Photo</label>
                    <input className="form-control " type="file" id="formFileMultiple" multiple onChange={(e) => converHandler(e)} name="images"
                        ref={inputRef} />

                </div>
                <div className="mb-3 text-center">
                    <button type="submit" onClick={handleSubmit} className="btn btn-primary">Submit</button>
                </div>
            </form>
            <ShowTable addContact={addContact} setAddContact={setAddContact} toggle={toggle} setToggle={setToggle} EditItem={EditItem} />

        </div>
    )
}

export default Form